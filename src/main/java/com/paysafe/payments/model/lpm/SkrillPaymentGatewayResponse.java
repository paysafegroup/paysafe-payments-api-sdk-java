// All Rights Reserved, Copyright Â© Paysafe Holdings UK Limited 2025. For more information see LICENSE

package com.paysafe.payments.model.lpm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * This contains parameters returned by Skrill gateway
 */
public class SkrillPaymentGatewayResponse {

  @JsonProperty("transaction_id")
  private String transactionId;
  @JsonProperty("amount")
  private String amount;
  @JsonProperty("mb_transaction_id")
  private String mbTransactionId;
  @JsonProperty("pay_from_email")
  private String payFromEmail;
  @JsonProperty("pay_to_email")
  private String payToEmail;
  @JsonProperty("currency")
  private String currency;
  @JsonProperty("merchant_id")
  private String merchantId;
  @JsonProperty("id")
  private String id;
  @JsonProperty("processor")
  private String processor;
  @JsonProperty("status")
  private String status;
  @JsonProperty("sid")
  private String sid;

  public SkrillPaymentGatewayResponse() {
    super();
  }

  private SkrillPaymentGatewayResponse(Builder builder) {
    setTransactionId(builder.transactionId);
    setAmount(builder.amount);
    setMbTransactionId(builder.mbTransactionId);
    setPayFromEmail(builder.payFromEmail);
    setPayToEmail(builder.payToEmail);
    setCurrency(builder.currency);
    setMerchantId(builder.merchantId);
    setId(builder.id);
    setProcessor(builder.processor);
    setStatus(builder.status);
    setSid(builder.sid);
  }

  public static Builder builder() {
    return new Builder();
  }

  public SkrillPaymentGatewayResponse transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * This transaction id is generated by Paysafe Gateway
   *
   * @return transactionId
   */
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public SkrillPaymentGatewayResponse amount(String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Transaction amount
   *
   * @return amount
   */
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public SkrillPaymentGatewayResponse mbTransactionId(String mbTransactionId) {
    this.mbTransactionId = mbTransactionId;
    return this;
  }

  /**
   * Unique transaction id at Skrill end
   *
   * @return mbTransactionId
   */
  public String getMbTransactionId() {
    return mbTransactionId;
  }

  public void setMbTransactionId(String mbTransactionId) {
    this.mbTransactionId = mbTransactionId;
  }

  public SkrillPaymentGatewayResponse payFromEmail(String payFromEmail) {
    this.payFromEmail = payFromEmail;
    return this;
  }

  /**
   * Customer email using which Payment has been completed
   *
   * @return payFromEmail
   */
  public String getPayFromEmail() {
    return payFromEmail;
  }

  public void setPayFromEmail(String payFromEmail) {
    this.payFromEmail = payFromEmail;
  }

  public SkrillPaymentGatewayResponse payToEmail(String payToEmail) {
    this.payToEmail = payToEmail;
    return this;
  }

  /**
   * Merchant's email
   *
   * @return payToEmail
   */
  public String getPayToEmail() {
    return payToEmail;
  }

  public void setPayToEmail(String payToEmail) {
    this.payToEmail = payToEmail;
  }

  public SkrillPaymentGatewayResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Transaction currency
   *
   * @return currency
   */
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SkrillPaymentGatewayResponse merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Skrill Merchant ID
   *
   * @return merchantId
   */
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public SkrillPaymentGatewayResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * This is same as \"mb_transaction_id\"
   *
   * @return id
   */
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SkrillPaymentGatewayResponse processor(String processor) {
    this.processor = processor;
    return this;
  }

  /**
   * This is the processor. Possible value: SKRILL_QCO
   *
   * @return processor
   */
  public String getProcessor() {
    return processor;
  }

  public void setProcessor(String processor) {
    this.processor = processor;
  }

  public SkrillPaymentGatewayResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status of the transaction at Skrill end. Possible values: <ul>
   * <li> 2 - Success </li>
   * <li> 0 - Pending </li>
   * <li> -2 - Failed
   *  </ul>
   *
   * @return status
   */
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public SkrillPaymentGatewayResponse sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * Skrll session id during which transaction is completed
   *
   * @return sid
   */
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkrillPaymentGatewayResponse skrillPaymentGatewayResponse = (SkrillPaymentGatewayResponse) o;
    return Objects.equals(this.transactionId, skrillPaymentGatewayResponse.transactionId) &&
        Objects.equals(this.amount, skrillPaymentGatewayResponse.amount) &&
        Objects.equals(this.mbTransactionId, skrillPaymentGatewayResponse.mbTransactionId) &&
        Objects.equals(this.payFromEmail, skrillPaymentGatewayResponse.payFromEmail) &&
        Objects.equals(this.payToEmail, skrillPaymentGatewayResponse.payToEmail) &&
        Objects.equals(this.currency, skrillPaymentGatewayResponse.currency) &&
        Objects.equals(this.merchantId, skrillPaymentGatewayResponse.merchantId) &&
        Objects.equals(this.id, skrillPaymentGatewayResponse.id) &&
        Objects.equals(this.processor, skrillPaymentGatewayResponse.processor) &&
        Objects.equals(this.status, skrillPaymentGatewayResponse.status) &&
        Objects.equals(this.sid, skrillPaymentGatewayResponse.sid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, amount, mbTransactionId, payFromEmail, payToEmail, currency, merchantId, id, processor, status, sid);
  }

  @Override
  public String toString() {

    return "class SkrillPaymentGatewayResponse {\n"
        + "    transactionId: " + toIndentedString(transactionId) + "\n"
        + "    amount: " + toIndentedString(amount) + "\n"
        + "    mbTransactionId: " + toIndentedString(mbTransactionId) + "\n"
        + "    payFromEmail: " + toIndentedString(payFromEmail) + "\n"
        + "    payToEmail: " + toIndentedString(payToEmail) + "\n"
        + "    currency: " + toIndentedString(currency) + "\n"
        + "    merchantId: " + toIndentedString(merchantId) + "\n"
        + "    id: " + toIndentedString(id) + "\n"
        + "    processor: " + toIndentedString(processor) + "\n"
        + "    status: " + toIndentedString(status) + "\n"
        + "    sid: " + toIndentedString(sid) + "\n"
        + "}";
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * {@code SkrillPaymentGatewayResponse} builder static inner class.
   */
  public static final class Builder {
    private String transactionId;
    private String amount;
    private String mbTransactionId;
    private String payFromEmail;
    private String payToEmail;
    private String currency;
    private String merchantId;
    private String id;
    private String processor;
    private String status;
    private String sid;

    private Builder() {
    }

    /**
     * Sets the {@code transactionId} and returns a reference to this Builder enabling method chaining.
     *
     * @param transactionId the {@code transactionId} to set
     * @return a reference to this Builder
     */
    public Builder transactionId(String transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    /**
     * Sets the {@code amount} and returns a reference to this Builder enabling method chaining.
     *
     * @param amount the {@code amount} to set
     * @return a reference to this Builder
     */
    public Builder amount(String amount) {
      this.amount = amount;
      return this;
    }

    /**
     * Sets the {@code mbTransactionId} and returns a reference to this Builder enabling method chaining.
     *
     * @param mbTransactionId the {@code mbTransactionId} to set
     * @return a reference to this Builder
     */
    public Builder mbTransactionId(String mbTransactionId) {
      this.mbTransactionId = mbTransactionId;
      return this;
    }

    /**
     * Sets the {@code payFromEmail} and returns a reference to this Builder enabling method chaining.
     *
     * @param payFromEmail the {@code payFromEmail} to set
     * @return a reference to this Builder
     */
    public Builder payFromEmail(String payFromEmail) {
      this.payFromEmail = payFromEmail;
      return this;
    }

    /**
     * Sets the {@code payToEmail} and returns a reference to this Builder enabling method chaining.
     *
     * @param payToEmail the {@code payToEmail} to set
     * @return a reference to this Builder
     */
    public Builder payToEmail(String payToEmail) {
      this.payToEmail = payToEmail;
      return this;
    }

    /**
     * Sets the {@code currency} and returns a reference to this Builder enabling method chaining.
     *
     * @param currency the {@code currency} to set
     * @return a reference to this Builder
     */
    public Builder currency(String currency) {
      this.currency = currency;
      return this;
    }

    /**
     * Sets the {@code merchantId} and returns a reference to this Builder enabling method chaining.
     *
     * @param merchantId the {@code merchantId} to set
     * @return a reference to this Builder
     */
    public Builder merchantId(String merchantId) {
      this.merchantId = merchantId;
      return this;
    }

    /**
     * Sets the {@code id} and returns a reference to this Builder enabling method chaining.
     *
     * @param id the {@code id} to set
     * @return a reference to this Builder
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * Sets the {@code processor} and returns a reference to this Builder enabling method chaining.
     *
     * @param processor the {@code processor} to set. Possible value: SKRILL_QCO
     * @return a reference to this Builder
     */
    public Builder processor(String processor) {
      this.processor = processor;
      return this;
    }

    /**
     * Sets the {@code status} and returns a reference to this Builder enabling method chaining.
     *
     * @param status the {@code status} to set
     * @return a reference to this Builder
     */
    public Builder status(String status) {
      this.status = status;
      return this;
    }

    /**
     * Sets the {@code sid} and returns a reference to this Builder enabling method chaining.
     *
     * @param sid the {@code sid} to set
     * @return a reference to this Builder
     */
    public Builder sid(String sid) {
      this.sid = sid;
      return this;
    }

    /**
     * Returns a {@code SkrillPaymentGatewayResponse} built from the parameters previously set.
     *
     * @return a {@code SkrillPaymentGatewayResponse} built with parameters of this {@code SkrillPaymentGatewayResponse.Builder}
     */
    public SkrillPaymentGatewayResponse build() {
      return new SkrillPaymentGatewayResponse(this);
    }
  }
}

